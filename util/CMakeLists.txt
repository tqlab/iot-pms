SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)

EXECUTE_PROCESS(COMMAND
        git describe --match=NeVeRmAtCh --always --abbrev=7 --dirty=[*]
        WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
        OUTPUT_VARIABLE PMS_GIT_SHA1
        ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)

MESSAGE("Build from git version: ${PMS_GIT_SHA1}")

EXECUTE_PROCESS(COMMAND
        date "+%Y-%m-%d %H:%M:%S %Z"
        WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
        OUTPUT_VARIABLE PMS_COMPILE_DATETIME
        ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)



# MESSAGE(${CMAKE_CURRENT_SOURCE_DIR})

# generate pms_version.c
CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/src/pms_version.c.in" "${CMAKE_CURRENT_BINARY_DIR}/gen/pms_version.c" @ONLY)
CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/src/pms_version.h.in" "${CMAKE_CURRENT_BINARY_DIR}/gen/pms_version.h" @ONLY)


AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/src SRC_LIST)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_BINARY_DIR}/gen SRC_LIST)

MESSAGE(${CMAKE_CURRENT_BINARY_DIR}/gen)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)

ADD_LIBRARY (pmsutil STATIC ${SRC_LIST})

# MESSAGE(${SRC_LIST})

INSTALL (TARGETS pmsutil DESTINATION bin)
# INSTALL (FILES src/sds.h DESTINATION include)
